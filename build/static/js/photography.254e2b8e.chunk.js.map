{"version":3,"sources":["components/Nav/Burger/Burger.module.css","components/Nav/Nav.module.css","components/PhotoGrid/PhotoGrid.module.css","components/Accordion/Accordion.module.css","components/Filters/ComboBox/ComboBox.module.css","components/Tags/Tag/Tag.module.css","components/Tags/Tags.module.css","pages/Photography/Photography.module.css","components/Nav/Burger/index.js","components/Nav/index.js","components/PhotoGrid/constants.js","components/PhotoGrid/PhotoGrid.js","components/constants.js","helpers/refinePhotos.js","components/PhotoGrid/index.js","components/Accordion/Accordion.js","components/Accordion/index.js","components/Filters/constants.js","components/Filters/ComboBox/ComboBox.js","components/Filters/ComboBox/index.js","components/Filters/Filters.js","components/Filters/index.js","components/Tags/Tag/Tag.js","components/Tags/Tag/index.js","components/Tags/Tags.js","components/Tags/constants.js","components/Tags/index.js","pages/Photography/index.js"],"names":["module","exports","burger","open","mobile-up","flexContainer","refinements","tablet-up","container","thumbnailWrapper","squareCrop","squareBorder","wrapper","accordion","label","icon","optionsList","option","selected","button","isSelected","cx","classNames","bind","styles","Burger","_cx","_this$props","this","props","handleClick","Object","defineProperty","react_default","a","createElement","className","onClick","Component","Nav","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleSideNav","state","setState","children","Nav_Burger","PropTypes","arrayOf","shape","public_id","string","isRequired","format","version","number","resource_type","type","created_at","bytes","width","height","url","secure_url","tags","array","context","object","PhotoGrid","dimensions","mobile","column","gutter","desktop","breakpoint","layoutCounter","onLayout","photos","gridLayoutFinished","length","setTimeout","handleResize","e","target","innerWidth","setDimensions","window","onresize","throttle","prevProps","isEqual","inView","entry","img","querySelector","src","getAttribute","removeAttribute","viewport","gutterWidth","columnWidth","_this2","_this$state","transform","concat","items","map","_ref","i","caption","photoUrl","split","splice","inlineCSS","react_intersection_observer_esm","onChange","handleLazyLoad","key","triggerOnce","_ref2","ref","style","data-src","join","alt","lib_default","monitorImagesLoaded","duration","refinePhotos","selectedFilters","selectedTags","selectedFilterKeys","keys","reduce","acc","photo","filter","filterKey","custom","every","push","refinePhotosByFilter","find","tag","indexOf","refinePhotosByTag","connect","getAllPhotos","getAllSelectedFilters","getAllSelectedTags","Accordion","objectSpread","OPTIONS_SHAPE","id","bool","options","ComboBox","title","toggleSelectedFilter","opts","components_Accordion","dispatch","Filters","filterComboBoxes","filterOptions","Filters_ComboBox","getAllFilterOptions","Tags","toggleTagSelected","_this$props2","isEnabled","disabled","Tag","toggleTag","mappedTags","Tags_Tag","getAllTags","Photography","Fragment","components_PhotoGrid","components_Nav","components_Filters","components_Tags"],"mappings":"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","file":"static/js/photography.254e2b8e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger\":\"Burger_burger__Oep6I\",\"open\":\"Burger_open__HZ6K-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mobile-up\":\"min-width: 480px\",\"flexContainer\":\"Nav_flexContainer__2IMrW\",\"open\":\"Nav_open__4v4r0\",\"refinements\":\"Nav_refinements__2W_fj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mobile-up\":\"min-width: 480px\",\"tablet-up\":\"min-width: 720px\",\"container\":\"PhotoGrid_container__RL2Xz\",\"thumbnailWrapper\":\"PhotoGrid_thumbnailWrapper__1aofQ\",\"squareCrop\":\"PhotoGrid_squareCrop__1L8x2\",\"squareBorder\":\"PhotoGrid_squareBorder__C09j9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Accordion_wrapper__nWAXx\",\"accordion\":\"Accordion_accordion__1J5-U\",\"label\":\"Accordion_label__2_Txt\",\"open\":\"Accordion_open__2YExF\",\"icon\":\"Accordion_icon__3t2rb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ComboBox_wrapper__sC86Y\",\"optionsList\":\"ComboBox_optionsList__268nO\",\"option\":\"ComboBox_option__134bM\",\"selected\":\"ComboBox_selected__3O7Yt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Tag_button__CfXq-\",\"isSelected\":\"Tag_isSelected__3uJqN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Tags_wrapper__DrRXg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Photography_container__2FhvW\"};","import React, { Component } from \"react\";\nimport styles from \"./Burger.module.css\";\nimport classNames from \"classnames\";\n\nlet cx = classNames.bind(styles);\n\nclass Burger extends Component {\n  render() {\n    const { open, handleClick } = this.props;\n    const classNames = cx({\n      [styles.burger]: true,\n      [styles.open]: open\n    });\n\n    return (\n      <button className={classNames} onClick={handleClick}>\n        <span />\n        <span />\n        <span />\n      </button>\n    );\n  }\n}\n\nexport default Burger;\n","import React, { Component } from \"react\";\nimport Burger from \"./Burger\";\nimport styles from \"./Nav.module.css\";\nimport classNames from \"classnames\";\n\nlet cx = classNames.bind(styles);\n\nclass Nav extends Component {\n  constructor() {\n    super();\n    this.state = {\n      open: false\n    };\n  }\n\n  toggleSideNav = () => {\n    const { open } = this.state;\n    this.setState({ open: !open });\n  };\n\n  render() {\n    const { open } = this.state;\n    const { children } = this.props;\n    const classNames = cx({\n      [styles.flexContainer]: true,\n      [styles.open]: open\n    });\n\n    return (\n      <div className={classNames}>\n        <nav>\n          <Burger handleClick={this.toggleSideNav} open={open} />\n          <div className={styles.refinements}>{children}</div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Nav;\n","import PropTypes from \"prop-types\";\n\nexport const PHOTOS_SHAPE = PropTypes.arrayOf(\n  PropTypes.shape({\n    public_id: PropTypes.string.isRequired,\n    format: PropTypes.string.isRequired,\n    version: PropTypes.number.isRequired,\n    resource_type: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    created_at: PropTypes.string.isRequired,\n    bytes: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    url: PropTypes.string.isRequired,\n    secure_url: PropTypes.string.isRequired,\n    tags: PropTypes.array,\n    context: PropTypes.object\n  })\n);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport StackGrid from \"react-stack-grid\";\nimport throttle from \"lodash.throttle\";\nimport isEqual from \"lodash.isequal\";\nimport window from \"global\";\nimport { PHOTOS_SHAPE } from \"./constants\";\n\nimport styles from \"./PhotoGrid.module.css\";\nimport { DESKTOP, MOBILE } from \"../constants\";\nimport { InView } from \"react-intersection-observer\";\n\nclass PhotoGrid extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gridLayoutFinished: false\n    };\n  }\n\n  dimensions = {\n    mobile: {\n      column: 110,\n      gutter: 15\n    },\n    desktop: {\n      column: 275,\n      gutter: 30\n    }\n  };\n  breakpoint = 720;\n  layoutCounter = 0;\n\n  componentWillMount() {\n    window.onresize = throttle(this.handleResize, 100);\n    this.setDimensions(window.innerWidth);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!isEqual(prevProps.photos, this.props.photos)) {\n      this.setState({\n        gridLayoutFinished: false\n      });\n    }\n  }\n\n  onLayout = () => {\n    const { photos } = this.props;\n    const { gridLayoutFinished } = this.state;\n    this.layoutCounter++;\n    if (this.layoutCounter >= photos.length && !gridLayoutFinished) {\n      setTimeout(() => {\n        this.setState({\n          gridLayoutFinished: true\n        });\n      }, 2);\n    }\n  };\n\n  handleLazyLoad(inView, entry) {\n    if (!inView) {\n      return;\n    }\n\n    const img = entry.target.querySelector(\"img\");\n    img.src = img.getAttribute(\"data-src\");\n    img.removeAttribute(\"data-src\");\n  }\n\n  handleResize = e => {\n    if (!e || !e.target || !e.target.innerWidth) {\n      return;\n    }\n    this.setDimensions(e.target.innerWidth);\n  };\n\n  setDimensions(width) {\n    const viewport = width <= this.breakpoint ? MOBILE : DESKTOP;\n    this.setState({\n      viewport,\n      gutterWidth: this.dimensions[viewport].gutter,\n      columnWidth: this.dimensions[viewport].column\n    });\n  }\n\n  render() {\n    const { photos } = this.props;\n    const { gutterWidth, columnWidth, gridLayoutFinished } = this.state;\n    const transform = `c_scale,w_${columnWidth}`;\n\n    let items = [];\n\n    if (photos.length) {\n      items = photos.map(({ secure_url, height, width, caption }, i) => {\n        const photoUrl = secure_url.split(\"/\");\n        photoUrl.splice(photoUrl.length - 2, 0, transform);\n\n        const imgHeight = (columnWidth / width) * height;\n        const inlineCSS = { height: imgHeight, width: columnWidth };\n\n        if (gridLayoutFinished) {\n          return (\n            <InView onChange={this.handleLazyLoad} key={i} triggerOnce={true}>\n              {({ ref }) => (\n                <div\n                  ref={ref}\n                  className={styles.thumbnailWrapper}\n                  style={inlineCSS}\n                >\n                  <img data-src={photoUrl.join(\"/\")} alt={caption} />\n                </div>\n              )}\n            </InView>\n          );\n        } else {\n          return (\n            <div\n              key={i}\n              className={styles.thumbnailWrapper}\n              style={inlineCSS}\n            />\n          );\n        }\n      });\n    }\n\n    return (\n      <StackGrid\n        columnWidth={columnWidth}\n        monitorImagesLoaded={true}\n        gutterWidth={gutterWidth}\n        className={styles.container}\n        onLayout={this.onLayout}\n        duration={0}\n      >\n        {items}\n      </StackGrid>\n    );\n  }\n}\n\nPhotoGrid.propTypes = {\n  photos: PHOTOS_SHAPE,\n  selectedTags: PropTypes.arrayOf(PropTypes.string),\n  selectedFilters: PropTypes.object,\n  size: PropTypes.shape({\n    width: PropTypes.number,\n    height: PropTypes.number\n  })\n};\n\nexport default PhotoGrid;\n","export const DESKTOP = \"desktop\";\nexport const MOBILE = \"mobile\";\n","const refinePhotosByTag = (photos, selectedTags) => {\n  return photos.reduce((acc, photo, i) => {\n    if (\n      !selectedTags.length ||\n      !selectedTags.find(tag => photo.tags.indexOf(tag) === -1)\n    ) {\n      acc.push(photo);\n    }\n    return acc;\n  }, []);\n};\n\nconst refinePhotosByFilter = (photos, selectedFilters) => {\n  const selectedFilterKeys = Object.keys(selectedFilters);\n  if (!selectedFilterKeys.length) {\n    return photos;\n  }\n\n  return photos.reduce((acc, photo) => {\n    // use .find() here for Union of filters, rather than intersection\n    const res = selectedFilterKeys\n      .filter(\n        filterKey =>\n          selectedFilters[filterKey] &&\n          photo.context &&\n          photo.context.custom[filterKey]\n      )\n      .every(\n        filterKey =>\n          selectedFilters[filterKey] === photo.context.custom[filterKey]\n      );\n\n    if (res) {\n      acc.push(photo);\n    }\n    return acc;\n  }, []);\n};\n\nconst refinePhotos = (photos, selectedFilters, selectedTags) =>\n  refinePhotosByFilter(\n    refinePhotosByTag(photos, selectedTags),\n    selectedFilters\n  );\n\nexport default refinePhotos;\n","import { connect } from \"react-redux\";\nimport PhotoGrid from \"./PhotoGrid\";\nimport { getAllPhotos } from \"../../store/photos\";\nimport { getAllSelectedTags } from \"../../store/tags\";\nimport { getAllSelectedFilters } from \"../../store/filters\";\nimport refinePhotos from \"../../helpers/refinePhotos\";\n\nconst mapStateToProps = state => ({\n  photos: refinePhotos(\n    getAllPhotos(state),\n    getAllSelectedFilters(state),\n    getAllSelectedTags(state.tags)\n  )\n});\n\nexport default connect(mapStateToProps)(PhotoGrid);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames/bind\";\nimport styles from \"./Accordion.module.css\";\n\nlet cx = classNames.bind(styles);\n\nclass Accordion extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      open: false\n    };\n  }\n\n  handleClick = () => {\n    const { open } = this.state;\n\n    this.setState({\n      open: !open\n    });\n  };\n\n  render() {\n    const { children, label } = this.props;\n    const { open } = this.state;\n\n    const icon = open ? \"‒\" : \"+\";\n\n    const classNames = cx({\n      [styles.accordion]: true,\n      open: open\n    });\n\n    return (\n      <div className={styles.wrapper}>\n        <button className={styles.label} onClick={this.handleClick}>\n          {label} <span className={styles.icon}>{icon}</span>\n        </button>\n        <div className={classNames}>{children}</div>\n      </div>\n    );\n  }\n}\n\nAccordion.propTypes = {\n  children: PropTypes.node.isRequired,\n  label: PropTypes.string.isRequired,\n  open: PropTypes.bool\n};\n\nexport default Accordion;\n","import { connect } from \"react-redux\";\nimport Accordion from \"./Accordion\";\n\nconst mapStateToProps = state => ({\n  ...state\n});\n\nconst mapDispatchToProps = () => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Accordion);\n","import PropTypes from \"prop-types\";\n\nexport const OPTIONS_SHAPE = PropTypes.arrayOf(\n    PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        isSelected: PropTypes.bool.isRequired\n    })\n);\n\nexport const FILTERS_SHAPE = PropTypes.arrayOf(\n    PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        options: OPTIONS_SHAPE\n    })\n);\n\nexport const SORT_BY_DATE_OPTIONS = [\"Date taken\", \"Date uploaded\"];\n\nexport const GRID_OPTIONS = [\"View all\", \"View by album\"];\n\n\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Accordion from \"../../Accordion\";\nimport classNames from \"classnames/bind\";\nimport styles from \"./ComboBox.module.css\";\nimport { OPTIONS_SHAPE } from \"../constants\";\n\nlet cx = classNames.bind(styles);\n\nclass ComboBox extends Component {\n  render() {\n    const { options, title, toggleSelectedFilter } = this.props;\n\n    const opts = options.map(({ id, isSelected }, i) => {\n      const className = cx({\n        [styles.option]: true,\n        [styles.selected]: isSelected ? true : false\n      });\n      return (\n        <li\n          key={i}\n          onClick={() => toggleSelectedFilter(title, id)}\n          className={className}\n        >\n          {id}\n        </li>\n      );\n    });\n\n    return (\n      <Accordion label={title}>\n        <ul className={styles.optionsList}>{opts}</ul>\n      </Accordion>\n    );\n  }\n}\n\nComboBox.propTypes = {\n  title: PropTypes.string.isRequired,\n  options: OPTIONS_SHAPE,\n  selected: PropTypes.string,\n  toggleSelectedFilter: PropTypes.func.isRequired\n};\n\nexport default ComboBox;\n","import { connect } from \"react-redux\";\nimport ComboBox from \"./ComboBox\";\nimport { toggleSelectedFilter } from \"../../../store/filters\";\n\nconst mapStateToProps = state => ({\n  ...state\n});\n\nconst mapDispatchToProps = (dispatch, { title, option }) => ({\n  toggleSelectedFilter: (title, option) =>\n    dispatch(toggleSelectedFilter(title, option))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ComboBox);\n","import React, { Component } from \"react\";\nimport ComboBox from \"./ComboBox\";\nimport styles from \"./Filters.module.css\";\nimport { FILTERS_SHAPE } from \"./constants\";\n\nclass Filters extends Component {\n  render() {\n    const { filterOptions } = this.props;\n    const filterComboBoxes = filterOptions.map(({ id, options }, i) => (\n      <ComboBox\n        key={i}\n        title={id}\n        options={options}\n        handleClick={this.handleClick}\n      />\n    ));\n\n    return <div className={styles.wrapper}>{filterComboBoxes}</div>;\n  }\n}\n\nFilters.propTypes = {\n  filterOptions: FILTERS_SHAPE\n};\n\nexport default Filters;\n","import { connect } from \"react-redux\";\nimport Filters from \"./Filters\";\nimport { getAllFilterOptions } from \"../../store/filters\";\n\nconst mapStateToProps = state => ({\n  filterOptions: getAllFilterOptions(state)\n});\n\nconst mapDispatchToProps = () => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Filters);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames/bind\";\nimport styles from \"./Tag.module.css\";\n\nlet cx = classNames.bind(styles);\n\nclass Tags extends Component {\n  handleClick = () => {\n    const { toggleTagSelected, id } = this.props;\n    toggleTagSelected(id);\n  };\n\n  render() {\n    const { id, isEnabled, isSelected } = this.props;\n\n    const className = cx({\n      [styles.button]: true,\n      isSelected: isSelected\n    });\n\n    return (\n      <button\n        className={className}\n        disabled={!isEnabled}\n        onClick={this.handleClick}\n      >\n        {id}\n      </button>\n    );\n  }\n}\n\nTags.propTypes = {\n  id: PropTypes.string.isRequired,\n  toggleTagSelected: PropTypes.func,\n  isSelected: PropTypes.bool.isRequired,\n  isEnabled: PropTypes.bool.isRequired\n};\n\nexport default Tags;\n","import { connect } from \"react-redux\";\nimport Tag from \"./Tag\";\nimport { toggleTagSelected } from \"../../../store/tags\";\n\nconst mapStateToProps = state => ({\n  ...state\n});\n\nconst mapDispatchToProps = (dispatch, { id }) => ({\n  toggleTagSelected: () => dispatch(toggleTagSelected(id))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Tag);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Accordion from \"../Accordion\";\nimport Tag from \"./Tag\";\nimport styles from \"./Tags.module.css\";\nimport { TAGS_SHAPE } from \"./constants\";\n\nclass Tags extends Component {\n  render() {\n    const { tags, toggleTag } = this.props;\n    const mappedTags =\n      tags.length &&\n      tags.map(({ id, isEnabled, isSelected }, i) => {\n        return (\n          <Tag\n            key={i}\n            id={id}\n            toggleTag={toggleTag}\n            isEnabled={isEnabled}\n            isSelected={isSelected}\n          />\n        );\n      });\n\n    return (\n      <Accordion label={\"tags\"}>\n        <div className={styles.wrapper}>{mappedTags}</div>\n      </Accordion>\n    );\n  }\n}\n\nTags.propTypes = {\n  tags: TAGS_SHAPE,\n  toggleTag: PropTypes.func\n};\n\nexport default Tags;\n","import PropTypes from \"prop-types\";\n\nexport const TAGS_SHAPE = PropTypes.arrayOf(\n    PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        isEnabled: PropTypes.bool.isRequired,\n        isSelected: PropTypes.bool.isRequired\n    })\n);","import { connect } from \"react-redux\";\nimport Tags from \"./Tags\";\nimport { getAllTags } from \"../../store/tags\";\n\nconst mapStateToProps = state => ({\n  tags: getAllTags(state)\n});\n\nconst mapDispatchToProps = () => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Tags);\n","import React, { Component } from \"react\";\nimport Nav from \"../../components/Nav\";\nimport PhotoGrid from \"../../components/PhotoGrid\";\nimport Filters from \"../../components/Filters\";\nimport Tags from \"../../components/Tags\";\nimport styles from \"./Photography.module.css\";\n\nclass Photography extends Component {\n  render() {\n    return (\n      <>\n        <div className={styles.container}>\n          <PhotoGrid />\n        </div>\n        <Nav>\n          <Filters />\n          <Tags />\n        </Nav>\n      </>\n    );\n  }\n}\n\nexport default Photography;\n"],"sourceRoot":""}