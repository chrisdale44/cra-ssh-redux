{"version":3,"sources":["components/Nav/Burger/Burger.module.css","components/Nav/Nav.module.css","components/PhotoGrid/PhotoGrid.module.css","components/Accordion/Accordion.module.css","components/Filters/ComboBox/ComboBox.module.css","components/Tags/Tag/Tag.module.css","components/Tags/Tags.module.css","components/PhotoBox/PhotoBox.module.css","pages/Photography/Photography.module.css","components/Nav/Burger/index.js","components/Nav/index.js","components/PhotoGrid/constants.js","components/PhotoGrid/PhotoGrid.js","components/constants.js","helpers/refinePhotos.js","components/PhotoGrid/index.js","components/Accordion/Accordion.js","components/Accordion/index.js","components/Filters/constants.js","components/Filters/ComboBox/ComboBox.js","components/Filters/ComboBox/index.js","components/Filters/Filters.js","components/Filters/index.js","components/Tags/Tag/Tag.js","components/Tags/Tag/index.js","components/Tags/Tags.js","components/Tags/constants.js","components/Tags/index.js","components/PhotoBox/PhotoBox.js","components/PhotoBox/index.js","pages/Photography/index.js"],"names":["module","exports","burger","open","mobile-up","flexContainer","refinements","tablet-up","container","thumbnailWrapper","squareCrop","squareBorder","wrapper","accordion","label","icon","optionsList","option","selected","button","isSelected","photo","close","cx","classNames","bind","styles","Burger","_cx","_this$props","this","props","handleClick","Object","defineProperty","react_default","a","createElement","className","onClick","Component","Nav","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleSideNav","state","setState","children","Nav_Burger","PropTypes","arrayOf","shape","public_id","string","isRequired","format","version","number","resource_type","type","created_at","bytes","width","height","url","secure_url","tags","array","context","object","PhotoGrid","dimensions","mobile","column","gutter","desktop","breakpoint","layoutCounter","onLayout","photos","gridLayoutFinished","length","setTimeout","handleResize","e","target","innerWidth","setDimensions","publicId","secureUrl","setOpenPhoto","window","onresize","throttle","prevProps","isEqual","inView","entry","img","querySelector","src","getAttribute","removeAttribute","viewport","gutterWidth","columnWidth","_this2","_this$state","transform","concat","items","map","_ref","i","caption","photoUrl","split","spliceIndex","indexOf","splice","inlineCSS","react_intersection_observer_esm","onChange","handleLazyLoad","key","triggerOnce","_ref2","ref","style","data-src","join","alt","lib_default","monitorImagesLoaded","duration","refinePhotos","selectedFilters","selectedTags","selectedFilterKeys","keys","reduce","acc","filter","filterKey","custom","every","push","refinePhotosByFilter","find","tag","refinePhotosByTag","connect","getAllPhotos","getAllSelectedFilters","getAllSelectedTags","dispatch","public_url","Accordion","objectSpread","OPTIONS_SHAPE","id","bool","options","ComboBox","title","toggleSelectedFilter","opts","components_Accordion","Filters","filterComboBoxes","filterOptions","Filters_ComboBox","getAllFilterOptions","Tags","toggleTagSelected","_this$props2","isEnabled","disabled","Tag","toggleTag","mappedTags","Tags_Tag","getAllTags","PhotoBox","closeOpenPhoto","getOpenPhoto","Photography","Fragment","components_PhotoGrid","components_PhotoBox","components_Nav","components_Filters","components_Tags"],"mappings":"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","file":"static/js/photography.8cf95eab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger\":\"Burger_burger__Oep6I\",\"open\":\"Burger_open__HZ6K-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mobile-up\":\"min-width: 480px\",\"flexContainer\":\"Nav_flexContainer__2IMrW\",\"open\":\"Nav_open__4v4r0\",\"refinements\":\"Nav_refinements__2W_fj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mobile-up\":\"min-width: 480px\",\"tablet-up\":\"min-width: 720px\",\"container\":\"PhotoGrid_container__RL2Xz\",\"thumbnailWrapper\":\"PhotoGrid_thumbnailWrapper__1aofQ\",\"squareCrop\":\"PhotoGrid_squareCrop__1L8x2\",\"squareBorder\":\"PhotoGrid_squareBorder__C09j9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Accordion_wrapper__nWAXx\",\"accordion\":\"Accordion_accordion__1J5-U\",\"label\":\"Accordion_label__2_Txt\",\"open\":\"Accordion_open__2YExF\",\"icon\":\"Accordion_icon__3t2rb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ComboBox_wrapper__sC86Y\",\"optionsList\":\"ComboBox_optionsList__268nO\",\"option\":\"ComboBox_option__134bM\",\"selected\":\"ComboBox_selected__3O7Yt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Tag_button__CfXq-\",\"isSelected\":\"Tag_isSelected__3uJqN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Tags_wrapper__DrRXg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PhotoBox_wrapper__3QUXj\",\"photo\":\"PhotoBox_photo__146eO\",\"close\":\"PhotoBox_close__2sPre\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Photography_container__2FhvW\"};","import React, { Component } from \"react\";\nimport styles from \"./Burger.module.css\";\nimport classNames from \"classnames\";\n\nlet cx = classNames.bind(styles);\n\nclass Burger extends Component {\n  render() {\n    const { open, handleClick } = this.props;\n    const classNames = cx({\n      [styles.burger]: true,\n      [styles.open]: open\n    });\n\n    return (\n      <button className={classNames} onClick={handleClick}>\n        <span />\n        <span />\n        <span />\n      </button>\n    );\n  }\n}\n\nexport default Burger;\n","import React, { Component } from \"react\";\nimport Burger from \"./Burger\";\nimport styles from \"./Nav.module.css\";\nimport classNames from \"classnames\";\n\nlet cx = classNames.bind(styles);\n\nclass Nav extends Component {\n  constructor() {\n    super();\n    this.state = {\n      open: false\n    };\n  }\n\n  toggleSideNav = () => {\n    const { open } = this.state;\n    this.setState({ open: !open });\n  };\n\n  render() {\n    const { open } = this.state;\n    const { children } = this.props;\n    const classNames = cx({\n      [styles.flexContainer]: true,\n      [styles.open]: open\n    });\n\n    return (\n      <div className={classNames}>\n        <nav>\n          <Burger handleClick={this.toggleSideNav} open={open} />\n          <div className={styles.refinements}>{children}</div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Nav;\n","import PropTypes from \"prop-types\";\n\nexport const PHOTOS_SHAPE = PropTypes.arrayOf(\n  PropTypes.shape({\n    public_id: PropTypes.string.isRequired,\n    format: PropTypes.string.isRequired,\n    version: PropTypes.number.isRequired,\n    resource_type: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    created_at: PropTypes.string.isRequired,\n    bytes: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    url: PropTypes.string.isRequired,\n    secure_url: PropTypes.string.isRequired,\n    tags: PropTypes.array,\n    context: PropTypes.object\n  })\n);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport StackGrid from \"react-stack-grid\";\nimport throttle from \"lodash.throttle\";\nimport isEqual from \"lodash.isequal\";\nimport window from \"global\";\nimport { PHOTOS_SHAPE } from \"./constants\";\n\nimport styles from \"./PhotoGrid.module.css\";\nimport { DESKTOP, MOBILE } from \"../constants\";\nimport { InView } from \"react-intersection-observer\";\n\nclass PhotoGrid extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gridLayoutFinished: false\n    };\n  }\n\n  dimensions = {\n    mobile: {\n      column: 110,\n      gutter: 15\n    },\n    desktop: {\n      column: 275,\n      gutter: 30\n    }\n  };\n  breakpoint = 720;\n  layoutCounter = 0;\n\n  componentWillMount() {\n    window.onresize = throttle(this.handleResize, 100);\n    this.setDimensions(window.innerWidth);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!isEqual(prevProps.photos, this.props.photos)) {\n      this.setState({\n        gridLayoutFinished: false\n      });\n    }\n  }\n\n  onLayout = () => {\n    const { photos } = this.props;\n    const { gridLayoutFinished } = this.state;\n    this.layoutCounter++;\n    if (this.layoutCounter >= photos.length && !gridLayoutFinished) {\n      setTimeout(() => {\n        this.setState({\n          gridLayoutFinished: true\n        });\n      }, 2);\n    }\n  };\n\n  handleLazyLoad(inView, entry) {\n    if (!inView) {\n      return;\n    }\n\n    const img = entry.target.querySelector(\"img\");\n    img.src = img.getAttribute(\"data-src\");\n    img.removeAttribute(\"data-src\");\n  }\n\n  handleResize = e => {\n    if (!e || !e.target || !e.target.innerWidth) {\n      return;\n    }\n    this.setDimensions(e.target.innerWidth);\n  };\n\n  setDimensions(width) {\n    const viewport = width <= this.breakpoint ? MOBILE : DESKTOP;\n    this.setState({\n      viewport,\n      gutterWidth: this.dimensions[viewport].gutter,\n      columnWidth: this.dimensions[viewport].column\n    });\n  }\n\n  handleClick = (publicId, secureUrl) => {\n    const { setOpenPhoto } = this.props;\n    setOpenPhoto(publicId, secureUrl);\n  };\n\n  render() {\n    const { photos } = this.props;\n    const { gutterWidth, columnWidth, gridLayoutFinished } = this.state;\n    const transform = `c_scale,w_${columnWidth}`;\n\n    let items = [];\n\n    if (photos.length) {\n      items = photos.map(\n        ({ secure_url, height, width, caption, public_id }, i) => {\n          const photoUrl = secure_url.split(\"/\");\n          const spliceIndex = photoUrl.indexOf(public_id.split(\"/\")[0]);\n          photoUrl.splice(spliceIndex, 0, transform);\n\n          const imgHeight = (columnWidth / width) * height;\n          const inlineCSS = { height: imgHeight, width: columnWidth };\n\n          if (gridLayoutFinished) {\n            return (\n              <InView onChange={this.handleLazyLoad} key={i} triggerOnce={true}>\n                {({ ref }) => (\n                  <div\n                    ref={ref}\n                    className={styles.thumbnailWrapper}\n                    style={inlineCSS}\n                  >\n                    <img\n                      data-src={photoUrl.join(\"/\")}\n                      alt={caption}\n                      onClick={() => this.handleClick(public_id, secure_url)}\n                    />\n                  </div>\n                )}\n              </InView>\n            );\n          } else {\n            return (\n              <div\n                key={i}\n                className={styles.thumbnailWrapper}\n                style={inlineCSS}\n              />\n            );\n          }\n        }\n      );\n    }\n\n    return (\n      <StackGrid\n        columnWidth={columnWidth}\n        monitorImagesLoaded={true}\n        gutterWidth={gutterWidth}\n        className={styles.container}\n        onLayout={this.onLayout}\n        duration={0}\n      >\n        {items}\n      </StackGrid>\n    );\n  }\n}\n\nPhotoGrid.propTypes = {\n  photos: PHOTOS_SHAPE,\n  selectedTags: PropTypes.arrayOf(PropTypes.string),\n  selectedFilters: PropTypes.object,\n  size: PropTypes.shape({\n    width: PropTypes.number,\n    height: PropTypes.number\n  })\n};\n\nexport default PhotoGrid;\n","export const DESKTOP = \"desktop\";\nexport const MOBILE = \"mobile\";\n","const refinePhotosByTag = (photos, selectedTags) => {\n  return photos.reduce((acc, photo, i) => {\n    if (\n      !selectedTags.length ||\n      !selectedTags.find(tag => photo.tags.indexOf(tag) === -1)\n    ) {\n      acc.push(photo);\n    }\n    return acc;\n  }, []);\n};\n\nconst refinePhotosByFilter = (photos, selectedFilters) => {\n  const selectedFilterKeys = Object.keys(selectedFilters);\n  if (!selectedFilterKeys.length) {\n    return photos;\n  }\n\n  return photos.reduce((acc, photo) => {\n    // use .find() here for Union of filters, rather than intersection\n    const res = selectedFilterKeys\n      .filter(\n        filterKey =>\n          selectedFilters[filterKey] &&\n          photo.context &&\n          photo.context.custom[filterKey]\n      )\n      .every(\n        filterKey =>\n          selectedFilters[filterKey] === photo.context.custom[filterKey]\n      );\n\n    if (res) {\n      acc.push(photo);\n    }\n    return acc;\n  }, []);\n};\n\nconst refinePhotos = (photos, selectedFilters, selectedTags) =>\n  refinePhotosByFilter(\n    refinePhotosByTag(photos, selectedTags),\n    selectedFilters\n  );\n\nexport default refinePhotos;\n","import { connect } from \"react-redux\";\nimport PhotoGrid from \"./PhotoGrid\";\nimport { getAllPhotos, setOpenPhoto } from \"../../store/photos\";\nimport { getAllSelectedTags } from \"../../store/tags\";\nimport { getAllSelectedFilters } from \"../../store/filters\";\nimport refinePhotos from \"../../helpers/refinePhotos\";\n\nconst mapDispatchToProps = dispatch => ({\n  setOpenPhoto: (public_url, url) => {\n    return dispatch(setOpenPhoto(public_url, url));\n  }\n});\n\nconst mapStateToProps = state => ({\n  photos: refinePhotos(\n    getAllPhotos(state),\n    getAllSelectedFilters(state),\n    getAllSelectedTags(state.tags)\n  )\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PhotoGrid);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames/bind\";\nimport styles from \"./Accordion.module.css\";\n\nlet cx = classNames.bind(styles);\n\nclass Accordion extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      open: false\n    };\n  }\n\n  handleClick = () => {\n    const { open } = this.state;\n\n    this.setState({\n      open: !open\n    });\n  };\n\n  render() {\n    const { children, label } = this.props;\n    const { open } = this.state;\n\n    const icon = open ? \"‒\" : \"+\";\n\n    const classNames = cx({\n      [styles.accordion]: true,\n      open: open\n    });\n\n    return (\n      <div className={styles.wrapper}>\n        <button className={styles.label} onClick={this.handleClick}>\n          {label} <span className={styles.icon}>{icon}</span>\n        </button>\n        <div className={classNames}>{children}</div>\n      </div>\n    );\n  }\n}\n\nAccordion.propTypes = {\n  children: PropTypes.node.isRequired,\n  label: PropTypes.string.isRequired,\n  open: PropTypes.bool\n};\n\nexport default Accordion;\n","import { connect } from \"react-redux\";\nimport Accordion from \"./Accordion\";\n\nconst mapStateToProps = state => ({\n  ...state\n});\n\nconst mapDispatchToProps = () => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Accordion);\n","import PropTypes from \"prop-types\";\n\nexport const OPTIONS_SHAPE = PropTypes.arrayOf(\n    PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        isSelected: PropTypes.bool.isRequired\n    })\n);\n\nexport const FILTERS_SHAPE = PropTypes.arrayOf(\n    PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        options: OPTIONS_SHAPE\n    })\n);\n\nexport const SORT_BY_DATE_OPTIONS = [\"Date taken\", \"Date uploaded\"];\n\nexport const GRID_OPTIONS = [\"View all\", \"View by album\"];\n\n\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Accordion from \"../../Accordion\";\nimport classNames from \"classnames/bind\";\nimport styles from \"./ComboBox.module.css\";\nimport { OPTIONS_SHAPE } from \"../constants\";\n\nlet cx = classNames.bind(styles);\n\nclass ComboBox extends Component {\n  render() {\n    const { options, title, toggleSelectedFilter } = this.props;\n\n    const opts = options.map(({ id, isSelected }, i) => {\n      const className = cx({\n        [styles.option]: true,\n        [styles.selected]: isSelected ? true : false\n      });\n      return (\n        <li\n          key={i}\n          onClick={() => toggleSelectedFilter(title, id)}\n          className={className}\n        >\n          {id}\n        </li>\n      );\n    });\n\n    return (\n      <Accordion label={title}>\n        <ul className={styles.optionsList}>{opts}</ul>\n      </Accordion>\n    );\n  }\n}\n\nComboBox.propTypes = {\n  title: PropTypes.string.isRequired,\n  options: OPTIONS_SHAPE,\n  selected: PropTypes.string,\n  toggleSelectedFilter: PropTypes.func.isRequired\n};\n\nexport default ComboBox;\n","import { connect } from \"react-redux\";\nimport ComboBox from \"./ComboBox\";\nimport { toggleSelectedFilter } from \"../../../store/filters\";\n\nconst mapStateToProps = state => ({\n  ...state\n});\n\nconst mapDispatchToProps = (dispatch, { title, option }) => ({\n  toggleSelectedFilter: (title, option) =>\n    dispatch(toggleSelectedFilter(title, option))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ComboBox);\n","import React, { Component } from \"react\";\nimport ComboBox from \"./ComboBox\";\nimport styles from \"./Filters.module.css\";\nimport { FILTERS_SHAPE } from \"./constants\";\n\nclass Filters extends Component {\n  render() {\n    const { filterOptions } = this.props;\n    const filterComboBoxes = filterOptions.map(({ id, options }, i) => (\n      <ComboBox\n        key={i}\n        title={id}\n        options={options}\n        handleClick={this.handleClick}\n      />\n    ));\n\n    return <div className={styles.wrapper}>{filterComboBoxes}</div>;\n  }\n}\n\nFilters.propTypes = {\n  filterOptions: FILTERS_SHAPE\n};\n\nexport default Filters;\n","import { connect } from \"react-redux\";\nimport Filters from \"./Filters\";\nimport { getAllFilterOptions } from \"../../store/filters\";\n\nconst mapStateToProps = state => ({\n  filterOptions: getAllFilterOptions(state)\n});\n\nconst mapDispatchToProps = () => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Filters);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames/bind\";\nimport styles from \"./Tag.module.css\";\n\nlet cx = classNames.bind(styles);\n\nclass Tags extends Component {\n  handleClick = () => {\n    const { toggleTagSelected, id } = this.props;\n    toggleTagSelected(id);\n  };\n\n  render() {\n    const { id, isEnabled, isSelected } = this.props;\n\n    const className = cx({\n      [styles.button]: true,\n      isSelected: isSelected\n    });\n\n    return (\n      <button\n        className={className}\n        disabled={!isEnabled}\n        onClick={this.handleClick}\n      >\n        {id}\n      </button>\n    );\n  }\n}\n\nTags.propTypes = {\n  id: PropTypes.string.isRequired,\n  toggleTagSelected: PropTypes.func,\n  isSelected: PropTypes.bool.isRequired,\n  isEnabled: PropTypes.bool.isRequired\n};\n\nexport default Tags;\n","import { connect } from \"react-redux\";\nimport Tag from \"./Tag\";\nimport { toggleTagSelected } from \"../../../store/tags\";\n\nconst mapStateToProps = state => ({\n  ...state\n});\n\nconst mapDispatchToProps = (dispatch, { id }) => ({\n  toggleTagSelected: () => dispatch(toggleTagSelected(id))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Tag);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Accordion from \"../Accordion\";\nimport Tag from \"./Tag\";\nimport styles from \"./Tags.module.css\";\nimport { TAGS_SHAPE } from \"./constants\";\n\nclass Tags extends Component {\n  render() {\n    const { tags, toggleTag } = this.props;\n    const mappedTags =\n      tags.length &&\n      tags.map(({ id, isEnabled, isSelected }, i) => {\n        return (\n          <Tag\n            key={i}\n            id={id}\n            toggleTag={toggleTag}\n            isEnabled={isEnabled}\n            isSelected={isSelected}\n          />\n        );\n      });\n\n    return (\n      <Accordion label={\"tags\"}>\n        <div className={styles.wrapper}>{mappedTags}</div>\n      </Accordion>\n    );\n  }\n}\n\nTags.propTypes = {\n  tags: TAGS_SHAPE,\n  toggleTag: PropTypes.func\n};\n\nexport default Tags;\n","import PropTypes from \"prop-types\";\n\nexport const TAGS_SHAPE = PropTypes.arrayOf(\n    PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        isEnabled: PropTypes.bool.isRequired,\n        isSelected: PropTypes.bool.isRequired\n    })\n);","import { connect } from \"react-redux\";\nimport Tags from \"./Tags\";\nimport { getAllTags } from \"../../store/tags\";\n\nconst mapStateToProps = state => ({\n  tags: getAllTags(state)\n});\n\nconst mapDispatchToProps = () => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Tags);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n// import classNames from \"classnames/bind\";\nimport styles from \"./PhotoBox.module.css\";\n\n// let cx = classNames.bind(styles);\n\nclass PhotoBox extends Component {\n  handleClick = () => {};\n\n  render() {\n    const { photo, closeOpenPhoto } = this.props;\n\n    if (!photo) {\n      return null;\n    }\n    const { public_id, url } = photo;\n\n    return (\n      <div className={styles.wrapper}>\n        <img className={styles.photo} src={url} />\n        <span className={styles.close} onClick={closeOpenPhoto}>\n          X\n        </span>\n      </div>\n    );\n  }\n}\n\nPhotoBox.propTypes = {\n  //   children: PropTypes.node.isRequired,\n  photo: PropTypes.object.isRequired,\n  closeOpenPhoto: PropTypes.func.isRequired\n};\n\nexport default PhotoBox;\n","import { connect } from \"react-redux\";\nimport PhotoBox from \"./PhotoBox\";\nimport { closeOpenPhoto, getOpenPhoto } from \"../../store/photos\";\n\nconst mapDispatchToProps = dispatch => ({\n  closeOpenPhoto: () => {\n    return dispatch(closeOpenPhoto());\n  }\n});\n\nconst mapStateToProps = state => ({\n  photo: getOpenPhoto(state)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PhotoBox);\n","import React, { Component } from \"react\";\nimport Nav from \"../../components/Nav\";\nimport PhotoGrid from \"../../components/PhotoGrid\";\nimport Filters from \"../../components/Filters\";\nimport Tags from \"../../components/Tags\";\nimport PhotoBox from \"../../components/PhotoBox\";\nimport styles from \"./Photography.module.css\";\n\nclass Photography extends Component {\n  render() {\n    return (\n      <>\n        <div className={styles.container}>\n          <PhotoGrid />\n          <PhotoBox />\n        </div>\n        <Nav>\n          <Filters />\n          <Tags />\n        </Nav>\n      </>\n    );\n  }\n}\n\nexport default Photography;\n"],"sourceRoot":""}