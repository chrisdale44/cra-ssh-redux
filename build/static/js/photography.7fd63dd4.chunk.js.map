{"version":3,"sources":["apps/photography/components/Nav/Burger/Burger.module.css","apps/photography/components/Nav/Nav.module.css","apps/photography/components/PhotoGrid/PhotoGrid.module.css","apps/photography/components/Accordion/Accordion.module.css","apps/photography/components/Filters/ComboBox/ComboBox.module.css","apps/photography/components/Tags/Tag/Tag.module.css","apps/photography/components/Tags/Tags.module.css","apps/photography/components/PhotoModal/Close/Close.module.css","apps/photography/components/PhotoModal/PhotoModal.module.css","apps/photography/Photography.module.css","apps/photography/components/Nav/Burger/index.js","apps/photography/components/Nav/index.js","apps/photography/components/PhotoGrid/constants.js","apps/photography/components/PhotoGrid/PhotoGrid.js","apps/photography/components/constants.js","apps/photography/helpers/refinePhotos.js","apps/photography/components/PhotoGrid/index.js","apps/photography/components/Accordion/Accordion.js","apps/photography/components/Accordion/index.js","apps/photography/components/Filters/constants.js","apps/photography/components/Filters/ComboBox/ComboBox.js","apps/photography/components/Filters/ComboBox/index.js","apps/photography/components/Filters/Filters.js","apps/photography/components/Filters/index.js","apps/photography/components/Tags/Tag/Tag.js","apps/photography/components/Tags/Tag/index.js","apps/photography/components/Tags/Tags.js","apps/photography/components/Tags/constants.js","apps/photography/components/Tags/index.js","apps/photography/components/PhotoModal/Close/index.js","apps/photography/components/PhotoModal/PhotoModal.js","apps/photography/components/PhotoModal/index.js","apps/photography/Photography.js","apps/photography/index.js"],"names":["module","exports","burger","open","mobile-up","flexContainer","refinements","tablet-up","container","thumbnailWrapper","squareCrop","squareBorder","wrapper","accordion","label","icon","optionsList","option","selected","button","isSelected","close","photo","cx","classNames","bind","styles","Burger","_cx","_this$props","this","props","handleClick","Object","defineProperty","react_default","a","createElement","className","onClick","Component","Nav","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleSideNav","state","setState","children","Nav_Burger","PropTypes","arrayOf","shape","public_id","string","isRequired","format","version","number","resource_type","type","created_at","bytes","width","height","url","secure_url","tags","array","context","object","scaleUp","transitions","PhotoGrid","dimensions","mobile","column","gutter","desktop","breakpoint","layoutCounter","loadedImages","onLayout","photos","gridLayoutFinished","length","setTimeout","handleLazyLoad","inView","entry","img","target","querySelector","src","getAttribute","push","removeAttribute","handleResize","e","innerWidth","setDimensions","secureUrl","setOpenPhoto","window","onresize","throttle","prevProps","isEqual","viewport","gutterWidth","columnWidth","_this2","_this$state","transform","concat","items","map","_ref","i","caption","photoUrl","split","spliceIndex","indexOf","splice","inlineCSS","includes","style","key","join","alt","react_intersection_observer_esm","onChange","triggerOnce","_ref2","ref","data-src","data-id","lib_default","monitorImagesLoaded","appear","appearDelay","appeared","enter","entered","duration","refinePhotos","selectedFilters","selectedTags","selectedFilterKeys","keys","reduce","acc","filter","filterKey","custom","every","refinePhotosByFilter","find","tag","refinePhotosByTag","connect","getAllPhotos","getAllSelectedFilters","getAllSelectedTags","dispatch","public_url","Accordion","objectSpread","OPTIONS_SHAPE","id","bool","options","ComboBox","title","toggleSelectedFilter","opts","components_Accordion","Filters","filterComboBoxes","filterOptions","Filters_ComboBox","getAllFilterOptions","Tags","toggleTagSelected","_this$props2","isEnabled","disabled","Tag","toggleTag","mappedTags","Tags_Tag","getAllTags","Close","PhotoModal","document","body","classList","add","remove","closeOpenPhoto","PhotoModal_Close","Photography","console","log","Fragment","components_PhotoGrid","components_PhotoModal","components_Nav","components_Filters","components_Tags","getOpenPhoto"],"mappings":"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","file":"static/js/photography.7fd63dd4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger\":\"Burger_burger__-wWRl\",\"open\":\"Burger_open__reWJt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mobile-up\":\"min-width: 480px\",\"flexContainer\":\"Nav_flexContainer__V_Tvq\",\"open\":\"Nav_open__1iskl\",\"refinements\":\"Nav_refinements__2gTi-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mobile-up\":\"min-width: 480px\",\"tablet-up\":\"min-width: 720px\",\"container\":\"PhotoGrid_container__3pm-g\",\"thumbnailWrapper\":\"PhotoGrid_thumbnailWrapper__WmVjD\",\"squareCrop\":\"PhotoGrid_squareCrop__1w8Z2\",\"squareBorder\":\"PhotoGrid_squareBorder__1uZfr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Accordion_wrapper__3L0_J\",\"accordion\":\"Accordion_accordion__2eu65\",\"label\":\"Accordion_label__1dOej\",\"open\":\"Accordion_open__1yVEJ\",\"icon\":\"Accordion_icon__1PuOI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ComboBox_wrapper__D7Hgg\",\"optionsList\":\"ComboBox_optionsList__34ID8\",\"option\":\"ComboBox_option__1RIGF\",\"selected\":\"ComboBox_selected__379Ok\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Tag_button__1pm1Z\",\"isSelected\":\"Tag_isSelected__3YyZB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Tags_wrapper__pfxZ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"close\":\"Close_close__12Dd1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PhotoModal_wrapper__clw_I\",\"photo\":\"PhotoModal_photo__3_ahD\",\"close\":\"PhotoModal_close__1gofg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Photography_container__2RgAk\"};","import React, { Component } from \"react\";\nimport styles from \"./Burger.module.css\";\nimport classNames from \"classnames\";\n\nlet cx = classNames.bind(styles);\n\nclass Burger extends Component {\n  render() {\n    const { open, handleClick } = this.props;\n    const classNames = cx({\n      [styles.burger]: true,\n      [styles.open]: open\n    });\n\n    return (\n      <button className={classNames} onClick={handleClick}>\n        <span />\n        <span />\n        <span />\n      </button>\n    );\n  }\n}\n\nexport default Burger;\n","import React, { Component } from \"react\";\nimport Burger from \"./Burger\";\nimport styles from \"./Nav.module.css\";\nimport classNames from \"classnames\";\n\nlet cx = classNames.bind(styles);\n\nclass Nav extends Component {\n  constructor() {\n    super();\n    this.state = {\n      open: false\n    };\n  }\n\n  toggleSideNav = () => {\n    const { open } = this.state;\n    this.setState({ open: !open });\n  };\n\n  render() {\n    const { open } = this.state;\n    const { children } = this.props;\n    const classNames = cx({\n      [styles.flexContainer]: true,\n      [styles.open]: open\n    });\n\n    return (\n      <div className={classNames}>\n        <nav>\n          <Burger handleClick={this.toggleSideNav} open={open} />\n          <div className={styles.refinements}>{children}</div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Nav;\n","import PropTypes from \"prop-types\";\n\nexport const PHOTOS_SHAPE = PropTypes.arrayOf(\n  PropTypes.shape({\n    public_id: PropTypes.string.isRequired,\n    format: PropTypes.string.isRequired,\n    version: PropTypes.number.isRequired,\n    resource_type: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    created_at: PropTypes.string.isRequired,\n    bytes: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    url: PropTypes.string.isRequired,\n    secure_url: PropTypes.string.isRequired,\n    tags: PropTypes.array,\n    context: PropTypes.object\n  })\n);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport StackGrid, { transitions } from \"react-stack-grid\";\nimport throttle from \"lodash.throttle\";\nimport isEqual from \"lodash.isequal\";\nimport window from \"global\";\nimport { PHOTOS_SHAPE } from \"./constants\";\n\nimport styles from \"./PhotoGrid.module.css\";\nimport { DESKTOP, MOBILE } from \"../constants\";\nimport { InView } from \"react-intersection-observer\";\nconst { scaleUp } = transitions;\n\nclass PhotoGrid extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gridLayoutFinished: false\n    };\n  }\n\n  dimensions = {\n    mobile: {\n      column: 110,\n      gutter: 15\n    },\n    desktop: {\n      column: 275,\n      gutter: 30\n    }\n  };\n  breakpoint = 720;\n  layoutCounter = 0;\n  loadedImages = [];\n\n  componentWillMount() {\n    window.onresize = throttle(this.handleResize, 100);\n    this.setDimensions(window.innerWidth);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!isEqual(prevProps.photos, this.props.photos)) {\n      this.setState({\n        gridLayoutFinished: false\n      });\n    }\n  }\n\n  onLayout = () => {\n    const { photos } = this.props;\n    const { gridLayoutFinished } = this.state;\n    this.layoutCounter++;\n    if (this.layoutCounter >= photos.length && !gridLayoutFinished) {\n      this.layoutCounter = 0;\n      setTimeout(() => {\n        this.setState({\n          gridLayoutFinished: true\n        });\n      }, 100); // wait for animation to finish\n    }\n  };\n\n  handleLazyLoad = (inView, entry) => {\n    if (!inView) {\n      return;\n    }\n\n    const img = entry.target.querySelector(\"img\");\n    img.src = img.getAttribute(\"data-src\");\n    this.loadedImages.push(img.getAttribute(\"data-id\"));\n    img.removeAttribute(\"data-src\");\n  };\n\n  handleResize = e => {\n    if (!e || !e.target || !e.target.innerWidth) {\n      return;\n    }\n    this.setDimensions(e.target.innerWidth);\n  };\n\n  setDimensions(width) {\n    const viewport = width <= this.breakpoint ? MOBILE : DESKTOP;\n    this.setState({\n      viewport,\n      gutterWidth: this.dimensions[viewport].gutter,\n      columnWidth: this.dimensions[viewport].column\n    });\n  }\n\n  handleClick = (public_id, secureUrl) => {\n    const { setOpenPhoto } = this.props;\n    setOpenPhoto(public_id, secureUrl);\n  };\n\n  render() {\n    const { photos } = this.props;\n    const { gutterWidth, columnWidth, gridLayoutFinished } = this.state;\n    const transform = `c_scale,w_${columnWidth}`;\n\n    let items = [];\n\n    if (photos.length) {\n      items = photos.map(\n        ({ secure_url, height, width, caption, public_id }, i) => {\n          const photoUrl = secure_url.split(\"/\");\n          const spliceIndex = photoUrl.indexOf(public_id.split(\"/\")[0]);\n          photoUrl.splice(spliceIndex, 0, transform);\n\n          const imgHeight = (columnWidth / width) * height;\n          const inlineCSS = { height: imgHeight, width: columnWidth };\n\n          if (this.loadedImages.includes(public_id)) {\n            return (\n              <div\n                className={styles.thumbnailWrapper}\n                style={inlineCSS}\n                key={i}\n              >\n                <img\n                  src={photoUrl.join(\"/\")}\n                  alt={caption}\n                  onClick={() => this.handleClick(public_id, secure_url)}\n                />\n              </div>\n            );\n          } else if (gridLayoutFinished) {\n            return (\n              <InView onChange={this.handleLazyLoad} key={i} triggerOnce={true}>\n                {({ ref }) => (\n                  <div\n                    ref={ref}\n                    className={styles.thumbnailWrapper}\n                    style={inlineCSS}\n                  >\n                    <img\n                      data-src={photoUrl.join(\"/\")}\n                      alt={caption}\n                      onClick={() => this.handleClick(public_id, secure_url)}\n                      data-id={public_id}\n                    />\n                  </div>\n                )}\n              </InView>\n            );\n          } else {\n            return (\n              <div\n                key={i}\n                className={styles.thumbnailWrapper}\n                style={inlineCSS}\n              />\n            );\n          }\n        }\n      );\n    }\n\n    return (\n      <StackGrid\n        columnWidth={columnWidth}\n        monitorImagesLoaded={true}\n        gutterWidth={gutterWidth}\n        className={styles.container}\n        onLayout={this.onLayout}\n        appear={scaleUp.appear}\n        appearDelay={0}\n        appeared={scaleUp.appeared}\n        enter={scaleUp.enter}\n        entered={scaleUp.entered}\n        duration={300}\n      >\n        {items}\n      </StackGrid>\n    );\n  }\n}\n\nPhotoGrid.propTypes = {\n  photos: PHOTOS_SHAPE,\n  selectedTags: PropTypes.arrayOf(PropTypes.string),\n  selectedFilters: PropTypes.object,\n  size: PropTypes.shape({\n    width: PropTypes.number,\n    height: PropTypes.number\n  })\n};\n\nexport default PhotoGrid;\n","export const DESKTOP = \"desktop\";\nexport const MOBILE = \"mobile\";\n","const refinePhotosByTag = (photos, selectedTags) => {\n  return photos.reduce((acc, photo) => {\n    if (\n      !selectedTags.length ||\n      !selectedTags.find(tag => photo.tags.indexOf(tag) === -1)\n    ) {\n      acc.push(photo);\n    }\n    return acc;\n  }, []);\n};\n\nconst refinePhotosByFilter = (photos, selectedFilters) => {\n  const selectedFilterKeys = Object.keys(selectedFilters);\n  if (!selectedFilterKeys.length) {\n    return photos;\n  }\n\n  return photos.reduce((acc, photo) => {\n    // use .find() here for Union of filters, rather than intersection\n    const res = selectedFilterKeys\n      .filter(\n        filterKey =>\n          selectedFilters[filterKey] &&\n          photo.context &&\n          photo.context.custom[filterKey]\n      )\n      .every(\n        filterKey =>\n          selectedFilters[filterKey] === photo.context.custom[filterKey]\n      );\n\n    if (res) {\n      acc.push(photo);\n    }\n    return acc;\n  }, []);\n};\n\nconst refinePhotos = (photos, selectedFilters, selectedTags) =>\n  refinePhotosByFilter(\n    refinePhotosByTag(photos, selectedTags),\n    selectedFilters\n  );\n\nexport default refinePhotos;\n","import { connect } from \"react-redux\";\nimport PhotoGrid from \"./PhotoGrid\";\nimport { getAllPhotos, setOpenPhoto } from \"../../store/photos\";\nimport { getAllSelectedTags } from \"../../store/tags\";\nimport { getAllSelectedFilters } from \"../../store/filters\";\nimport refinePhotos from \"../../helpers/refinePhotos\";\n\nconst mapDispatchToProps = dispatch => ({\n  setOpenPhoto: (public_url, url) => {\n    return dispatch(setOpenPhoto(public_url, url));\n  }\n});\n\nconst mapStateToProps = state => ({\n  photos: refinePhotos(\n    getAllPhotos(state),\n    getAllSelectedFilters(state),\n    getAllSelectedTags(state.tags)\n  )\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PhotoGrid);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames/bind\";\nimport styles from \"./Accordion.module.css\";\n\nlet cx = classNames.bind(styles);\n\nclass Accordion extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      open: false\n    };\n  }\n\n  handleClick = () => {\n    const { open } = this.state;\n\n    this.setState({\n      open: !open\n    });\n  };\n\n  render() {\n    const { children, label } = this.props;\n    const { open } = this.state;\n\n    const icon = open ? \"‒\" : \"+\";\n\n    const classNames = cx({\n      [styles.accordion]: true,\n      open: open\n    });\n\n    return (\n      <div className={styles.wrapper}>\n        <button className={styles.label} onClick={this.handleClick}>\n          {label} <span className={styles.icon}>{icon}</span>\n        </button>\n        <div className={classNames}>{children}</div>\n      </div>\n    );\n  }\n}\n\nAccordion.propTypes = {\n  children: PropTypes.node.isRequired,\n  label: PropTypes.string.isRequired,\n  open: PropTypes.bool\n};\n\nexport default Accordion;\n","import { connect } from \"react-redux\";\nimport Accordion from \"./Accordion\";\n\nconst mapStateToProps = state => ({\n  ...state\n});\n\nconst mapDispatchToProps = () => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Accordion);\n","import PropTypes from \"prop-types\";\n\nexport const OPTIONS_SHAPE = PropTypes.arrayOf(\n  PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    isSelected: PropTypes.bool.isRequired\n  })\n);\n\nexport const FILTERS_SHAPE = PropTypes.arrayOf(\n  PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    options: OPTIONS_SHAPE\n  })\n);\n\nexport const SORT_BY_DATE_OPTIONS = [\"Date taken\", \"Date uploaded\"];\n\nexport const GRID_OPTIONS = [\"View all\", \"View by album\"];\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Accordion from \"../../Accordion\";\nimport classNames from \"classnames/bind\";\nimport styles from \"./ComboBox.module.css\";\nimport { OPTIONS_SHAPE } from \"../constants\";\n\nlet cx = classNames.bind(styles);\n\nclass ComboBox extends Component {\n  render() {\n    const { options, title, toggleSelectedFilter } = this.props;\n\n    const opts = options.map(({ id, isSelected }, i) => {\n      const className = cx({\n        [styles.option]: true,\n        [styles.selected]: isSelected ? true : false\n      });\n      return (\n        <li\n          key={i}\n          onClick={() => toggleSelectedFilter(title, id)}\n          className={className}\n        >\n          {id}\n        </li>\n      );\n    });\n\n    return (\n      <Accordion label={title}>\n        <ul className={styles.optionsList}>{opts}</ul>\n      </Accordion>\n    );\n  }\n}\n\nComboBox.propTypes = {\n  title: PropTypes.string.isRequired,\n  options: OPTIONS_SHAPE,\n  selected: PropTypes.string,\n  toggleSelectedFilter: PropTypes.func.isRequired\n};\n\nexport default ComboBox;\n","import { connect } from \"react-redux\";\nimport ComboBox from \"./ComboBox\";\nimport { toggleSelectedFilter } from \"../../../store/filters\";\n\nconst mapStateToProps = state => ({\n  ...state\n});\n\nconst mapDispatchToProps = (dispatch, { title, option }) => ({\n  toggleSelectedFilter: (title, option) =>\n    dispatch(toggleSelectedFilter(title, option))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ComboBox);\n","import React, { Component } from \"react\";\nimport ComboBox from \"./ComboBox\";\nimport styles from \"./Filters.module.css\";\nimport { FILTERS_SHAPE } from \"./constants\";\n\nclass Filters extends Component {\n  render() {\n    const { filterOptions } = this.props;\n    const filterComboBoxes = filterOptions.map(({ id, options }, i) => (\n      <ComboBox\n        key={i}\n        title={id}\n        options={options}\n        handleClick={this.handleClick}\n      />\n    ));\n\n    return <div className={styles.wrapper}>{filterComboBoxes}</div>;\n  }\n}\n\nFilters.propTypes = {\n  filterOptions: FILTERS_SHAPE\n};\n\nexport default Filters;\n","import { connect } from \"react-redux\";\nimport Filters from \"./Filters\";\nimport { getAllFilterOptions } from \"../../store/filters\";\n\nconst mapStateToProps = state => ({\n  filterOptions: getAllFilterOptions(state)\n});\n\nconst mapDispatchToProps = () => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Filters);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames/bind\";\nimport styles from \"./Tag.module.css\";\n\nlet cx = classNames.bind(styles);\n\nclass Tags extends Component {\n  handleClick = () => {\n    const { toggleTagSelected, id } = this.props;\n    toggleTagSelected(id);\n  };\n\n  render() {\n    const { id, isEnabled, isSelected } = this.props;\n\n    const className = cx({\n      [styles.button]: true,\n      isSelected: isSelected\n    });\n\n    return (\n      <button\n        className={className}\n        disabled={!isEnabled}\n        onClick={this.handleClick}\n      >\n        {id}\n      </button>\n    );\n  }\n}\n\nTags.propTypes = {\n  id: PropTypes.string.isRequired,\n  toggleTagSelected: PropTypes.func,\n  isSelected: PropTypes.bool.isRequired,\n  isEnabled: PropTypes.bool.isRequired\n};\n\nexport default Tags;\n","import { connect } from \"react-redux\";\nimport Tag from \"./Tag\";\nimport { toggleTagSelected } from \"../../../store/tags\";\n\nconst mapStateToProps = state => ({\n  ...state\n});\n\nconst mapDispatchToProps = (dispatch, { id }) => ({\n  toggleTagSelected: () => dispatch(toggleTagSelected(id))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Tag);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Accordion from \"../Accordion\";\nimport Tag from \"./Tag\";\nimport styles from \"./Tags.module.css\";\nimport { TAGS_SHAPE } from \"./constants\";\n\nclass Tags extends Component {\n  render() {\n    const { tags, toggleTag } = this.props;\n    const mappedTags =\n      tags.length &&\n      tags.map(({ id, isEnabled, isSelected }, i) => {\n        return (\n          <Tag\n            key={i}\n            id={id}\n            toggleTag={toggleTag}\n            isEnabled={isEnabled}\n            isSelected={isSelected}\n          />\n        );\n      });\n\n    return (\n      <Accordion label={\"tags\"}>\n        <div className={styles.wrapper}>{mappedTags}</div>\n      </Accordion>\n    );\n  }\n}\n\nTags.propTypes = {\n  tags: TAGS_SHAPE,\n  toggleTag: PropTypes.func\n};\n\nexport default Tags;\n","import PropTypes from \"prop-types\";\n\nexport const TAGS_SHAPE = PropTypes.arrayOf(\n  PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    isEnabled: PropTypes.bool.isRequired,\n    isSelected: PropTypes.bool.isRequired\n  })\n);\n","import { connect } from \"react-redux\";\nimport Tags from \"./Tags\";\nimport { getAllTags } from \"../../store/tags\";\n\nconst mapStateToProps = state => ({\n  tags: getAllTags(state)\n});\n\nconst mapDispatchToProps = () => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Tags);\n","import React, { Component } from \"react\";\nimport styles from \"./Close.module.css\";\nimport classNames from \"classnames\";\n\nlet cx = classNames.bind(styles);\n\nclass Close extends Component {\n  render() {\n    const { open, handleClick } = this.props;\n    const classNames = cx({\n      [styles.close]: true,\n      [styles.open]: open\n    });\n\n    return (\n      <button className={classNames} onClick={handleClick}>\n        <span />\n        <span />\n      </button>\n    );\n  }\n}\n\nexport default Close;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Close from \"./Close\";\nimport styles from \"./PhotoModal.module.css\";\n\nclass PhotoModal extends Component {\n  componentDidMount() {\n    document.body.classList.add(\"no-scroll\");\n  }\n\n  componentWillUnmount() {\n    document.body.classList.remove(\"no-scroll\");\n  }\n\n  render() {\n    const { photo, closeOpenPhoto } = this.props;\n    const { url } = photo;\n\n    return (\n      <div className={styles.wrapper}>\n        <img className={styles.photo} src={url} />\n        <Close className={styles.close} handleClick={closeOpenPhoto} />\n      </div>\n    );\n  }\n}\n\nPhotoModal.propTypes = {\n  photo: PropTypes.object,\n  closeOpenPhoto: PropTypes.func.isRequired\n};\n\nexport default PhotoModal;\n","import { connect } from \"react-redux\";\nimport PhotoModal from \"./PhotoModal\";\nimport { closeOpenPhoto } from \"../../store/photos\";\n\nconst mapDispatchToProps = dispatch => ({\n  closeOpenPhoto: () => {\n    return dispatch(closeOpenPhoto());\n  }\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(PhotoModal);\n","import React, { Component } from \"react\";\nimport Nav from \"./components/Nav\";\nimport PhotoGrid from \"./components/PhotoGrid\";\nimport Filters from \"./components/Filters\";\nimport Tags from \"./components/Tags\";\nimport PhotoModal from \"./components/PhotoModal\";\nimport styles from \"./Photography.module.css\";\n\nclass Photography extends Component {\n  render() {\n    const { photo } = this.props;\n    console.log(photo);\n    return (\n      <>\n        <div className={styles.container}>\n          <PhotoGrid />\n          {photo && <PhotoModal photo={photo} />}\n        </div>\n        <Nav>\n          <Filters />\n          <Tags />\n        </Nav>\n      </>\n    );\n  }\n}\n\nexport default Photography;\n","import { connect } from \"react-redux\";\nimport { getOpenPhoto } from \"./store/photos\";\nimport Photography from \"./Photography\";\n\nconst mapStateToProps = state => ({\n  photo: getOpenPhoto(state)\n});\n\nexport default connect(mapStateToProps)(Photography);\n"],"sourceRoot":""}