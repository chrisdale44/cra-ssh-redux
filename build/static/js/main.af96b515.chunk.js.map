{"version":3,"sources":["apps/photography/components/Tags/Tag/Tag.module.css","apps/photography/components/Tags/Tags.module.css","apps/photography/Photography.module.css","apps/portfolio/index.js","apps/AsyncLoader.js","apps/photography/store/photos/selectors.js","apps/photography/components/Nav/Burger/index.js","apps/photography/components/Nav/index.js","apps/photography/components/PhotoGrid/constants.js","apps/photography/components/PhotoGrid/PhotoGrid.js","apps/photography/components/constants.js","apps/photography/store/filters/selectors.js","apps/photography/store/tags/selectors.js","apps/photography/helpers/refinePhotos.js","apps/photography/components/PhotoGrid/index.js","apps/photography/store/photos/actions.js","apps/photography/store/photos/constants.js","apps/photography/components/Accordion/Accordion.js","apps/photography/components/Accordion/index.js","apps/photography/components/Filters/constants.js","apps/photography/components/Filters/ComboBox/ComboBox.js","apps/photography/components/Filters/ComboBox/index.js","apps/photography/store/filters/actions.js","apps/photography/store/filters/constants.js","apps/photography/components/Filters/Filters.js","apps/photography/components/Filters/index.js","apps/photography/components/Tags/Tag/Tag.js","apps/photography/components/Tags/Tag/index.js","apps/photography/store/tags/actions.js","apps/photography/store/tags/constants.js","apps/photography/components/Tags/Tags.js","apps/photography/components/Tags/constants.js","apps/photography/components/Tags/index.js","apps/photography/components/PhotoModal/Close/index.js","apps/photography/components/PhotoModal/PhotoModal.js","apps/photography/components/PhotoModal/index.js","apps/photography/Photography.js","apps/photography/index.js","serviceWorker.js","index.js","apps/photography/components/Accordion/Accordion.module.css","apps/photography/components/Nav/Nav.module.css","apps/photography/components/PhotoGrid/PhotoGrid.module.css","apps/photography/components/Filters/ComboBox/ComboBox.module.css","apps/photography/components/Nav/Burger/Burger.module.css","apps/photography/components/PhotoModal/Close/Close.module.css","apps/photography/components/PhotoModal/PhotoModal.module.css"],"names":["module","exports","button","isSelected","wrapper","container","AsyncPortfolio","opts","Loadable","Object","objectSpread","loading","react_default","a","createElement","AsyncLoader","loader","__webpack_require__","e","then","bind","modules","getAllPhotos","state","photos","getPhoto","props","filter","photo","id","getOpenPhoto","createSelector","tags","album","medium","subject","openPhoto","cx","classNames","styles","Burger","_cx","_this$props","this","open","handleClick","defineProperty","burger","className","onClick","Component","Nav","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleSideNav","setState","children","flexContainer","Nav_Burger","refinements","PropTypes","arrayOf","shape","public_id","string","isRequired","format","version","number","resource_type","type","created_at","bytes","width","height","url","secure_url","array","context","object","scaleUp","transitions","PhotoGrid","dimensions","mobile","column","gutter","desktop","breakpoint","layoutCounter","loadedImages","onLayout","gridLayoutFinished","length","setTimeout","handleLazyLoad","inView","entry","img","target","querySelector","src","getAttribute","push","removeAttribute","handleResize","innerWidth","setDimensions","secureUrl","setOpenPhoto","window","onresize","throttle","prevProps","isEqual","viewport","gutterWidth","columnWidth","_this2","_this$state","transform","concat","items","map","_ref","i","caption","photoUrl","split","spliceIndex","indexOf","splice","inlineCSS","includes","thumbnailWrapper","style","key","join","alt","react_intersection_observer_esm","onChange","triggerOnce","_ref2","ref","data-src","data-id","react_stack_grid_lib_default","monitorImagesLoaded","appear","appearDelay","appeared","enter","entered","duration","getAllFilterOptions","filters","getAllSelectedFilters","reduce","acc","options","selectedOption","option","getAllTags","getAllSelectedTags","tag","refinePhotos","selectedFilters","selectedTags","selectedFilterKeys","keys","filterKey","custom","every","refinePhotosByFilter","find","refinePhotosByTag","connect","dispatch","public_url","Accordion","label","icon","accordion","OPTIONS_SHAPE","bool","ComboBox","title","toggleSelectedFilter","selected","components_Accordion","optionsList","Filters","filterComboBoxes","filterOptions","Filters_ComboBox","Tags","toggleTagSelected","_this$props2","isEnabled","disabled","tagId","getState","Tag","toggleTag","mappedTags","Tags_Tag","Close","close","PhotoModal","document","body","classList","add","remove","closeOpenPhoto","PhotoModal_Close","Photography","console","log","Fragment","components_PhotoGrid","components_PhotoModal","components_Nav","components_Filters","components_Tags","Boolean","location","hostname","match","AppBundle","react_router_dom","react_router","exact","path","component","AsyncPhotography","onload","preloadReady","ReactDOM","hydrate","getElementById","navigator","serviceWorker","ready","registration","unregister","mobile-up","tablet-up","squareCrop","squareBorder"],"mappings":"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","file":"static/js/main.af96b515.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Tag_button__1pm1Z\",\"isSelected\":\"Tag_isSelected__3YyZB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Tags_wrapper__pfxZ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Photography_container__2RgAk\"};","import AsyncLoader from \"../AsyncLoader\";\n\nconst AsyncPortfolio = AsyncLoader({\n  loader: () => import(/* webpackChunkName: \"home\" */ \"./App\"),\n  modules: [\"home\"]\n});\n\nexport default AsyncPortfolio;\n","import React from \"react\";\nimport Loadable from \"react-loadable\";\n\nconst AsyncLoader = opts =>\n  Loadable({\n    loading: () => <div>loading...</div>,\n    ...opts\n  });\n\nexport default AsyncLoader;\n","import { createSelector } from \"reselect\";\n\nexport const getAllPhotos = state => state.photos.photos;\n\nexport const getPhoto = (state, props) =>\n  state.photos.photos.filter(photo => photo.id === props.id);\n\nexport const getPhotoTags = createSelector(\n  getPhoto,\n  photo => photo && photo.tags\n);\n\nexport const getPhotoAlbum = createSelector(\n  getPhoto,\n  photo => photo && photo.album\n);\n\nexport const getPhotoMedium = createSelector(\n  getPhoto,\n  photo => photo && photo.medium\n);\n\nexport const getPhotoSubject = createSelector(\n  getPhoto,\n  photo => photo && photo.subject\n);\n\nexport const getOpenPhoto = state => state.photos.openPhoto;\n","import React, { Component } from \"react\";\nimport styles from \"./Burger.module.css\";\nimport classNames from \"classnames\";\n\nlet cx = classNames.bind(styles);\n\nclass Burger extends Component {\n  render() {\n    const { open, handleClick } = this.props;\n    const classNames = cx({\n      [styles.burger]: true,\n      [styles.open]: open\n    });\n\n    return (\n      <button className={classNames} onClick={handleClick}>\n        <span />\n        <span />\n        <span />\n      </button>\n    );\n  }\n}\n\nexport default Burger;\n","import React, { Component } from \"react\";\nimport Burger from \"./Burger\";\nimport styles from \"./Nav.module.css\";\nimport classNames from \"classnames\";\n\nlet cx = classNames.bind(styles);\n\nclass Nav extends Component {\n  constructor() {\n    super();\n    this.state = {\n      open: false\n    };\n  }\n\n  toggleSideNav = () => {\n    const { open } = this.state;\n    this.setState({ open: !open });\n  };\n\n  render() {\n    const { open } = this.state;\n    const { children } = this.props;\n    const classNames = cx({\n      [styles.flexContainer]: true,\n      [styles.open]: open\n    });\n\n    return (\n      <div className={classNames}>\n        <nav>\n          <Burger handleClick={this.toggleSideNav} open={open} />\n          <div className={styles.refinements}>{children}</div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Nav;\n","import PropTypes from \"prop-types\";\n\nexport const PHOTOS_SHAPE = PropTypes.arrayOf(\n  PropTypes.shape({\n    public_id: PropTypes.string.isRequired,\n    format: PropTypes.string.isRequired,\n    version: PropTypes.number.isRequired,\n    resource_type: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    created_at: PropTypes.string.isRequired,\n    bytes: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    url: PropTypes.string.isRequired,\n    secure_url: PropTypes.string.isRequired,\n    tags: PropTypes.array,\n    context: PropTypes.object\n  })\n);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport StackGrid, { transitions } from \"react-stack-grid\";\nimport throttle from \"lodash.throttle\";\nimport isEqual from \"lodash.isequal\";\nimport window from \"global\";\nimport { PHOTOS_SHAPE } from \"./constants\";\n\nimport styles from \"./PhotoGrid.module.css\";\nimport { DESKTOP, MOBILE } from \"../constants\";\nimport { InView } from \"react-intersection-observer\";\nconst { scaleUp } = transitions;\n\nclass PhotoGrid extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gridLayoutFinished: false\n    };\n  }\n\n  dimensions = {\n    mobile: {\n      column: 110,\n      gutter: 15\n    },\n    desktop: {\n      column: 275,\n      gutter: 30\n    }\n  };\n  breakpoint = 720;\n  layoutCounter = 0;\n  loadedImages = [];\n\n  componentWillMount() {\n    window.onresize = throttle(this.handleResize, 100);\n    this.setDimensions(window.innerWidth);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!isEqual(prevProps.photos, this.props.photos)) {\n      this.setState({\n        gridLayoutFinished: false\n      });\n    }\n  }\n\n  onLayout = () => {\n    const { photos } = this.props;\n    const { gridLayoutFinished } = this.state;\n    this.layoutCounter++;\n    if (this.layoutCounter >= photos.length && !gridLayoutFinished) {\n      this.layoutCounter = 0;\n      setTimeout(() => {\n        this.setState({\n          gridLayoutFinished: true\n        });\n      }, 100); // wait for animation to finish\n    }\n  };\n\n  handleLazyLoad = (inView, entry) => {\n    if (!inView) {\n      return;\n    }\n\n    const img = entry.target.querySelector(\"img\");\n    img.src = img.getAttribute(\"data-src\");\n    this.loadedImages.push(img.getAttribute(\"data-id\"));\n    img.removeAttribute(\"data-src\");\n  };\n\n  handleResize = e => {\n    if (!e || !e.target || !e.target.innerWidth) {\n      return;\n    }\n    this.setDimensions(e.target.innerWidth);\n  };\n\n  setDimensions(width) {\n    const viewport = width <= this.breakpoint ? MOBILE : DESKTOP;\n    this.setState({\n      viewport,\n      gutterWidth: this.dimensions[viewport].gutter,\n      columnWidth: this.dimensions[viewport].column\n    });\n  }\n\n  handleClick = (public_id, secureUrl) => {\n    const { setOpenPhoto } = this.props;\n    setOpenPhoto(public_id, secureUrl);\n  };\n\n  render() {\n    const { photos } = this.props;\n    const { gutterWidth, columnWidth, gridLayoutFinished } = this.state;\n    const transform = `c_scale,w_${columnWidth}`;\n\n    let items = [];\n\n    if (photos.length) {\n      items = photos.map(\n        ({ secure_url, height, width, caption, public_id }, i) => {\n          const photoUrl = secure_url.split(\"/\");\n          const spliceIndex = photoUrl.indexOf(public_id.split(\"/\")[0]);\n          photoUrl.splice(spliceIndex, 0, transform);\n\n          const imgHeight = (columnWidth / width) * height;\n          const inlineCSS = { height: imgHeight, width: columnWidth };\n\n          if (this.loadedImages.includes(public_id)) {\n            return (\n              <div\n                className={styles.thumbnailWrapper}\n                style={inlineCSS}\n                key={i}\n              >\n                <img\n                  src={photoUrl.join(\"/\")}\n                  alt={caption}\n                  onClick={() => this.handleClick(public_id, secure_url)}\n                />\n              </div>\n            );\n          } else if (gridLayoutFinished) {\n            return (\n              <InView onChange={this.handleLazyLoad} key={i} triggerOnce={true}>\n                {({ ref }) => (\n                  <div\n                    ref={ref}\n                    className={styles.thumbnailWrapper}\n                    style={inlineCSS}\n                  >\n                    <img\n                      data-src={photoUrl.join(\"/\")}\n                      alt={caption}\n                      onClick={() => this.handleClick(public_id, secure_url)}\n                      data-id={public_id}\n                    />\n                  </div>\n                )}\n              </InView>\n            );\n          } else {\n            return (\n              <div\n                key={i}\n                className={styles.thumbnailWrapper}\n                style={inlineCSS}\n              />\n            );\n          }\n        }\n      );\n    }\n\n    return (\n      <StackGrid\n        columnWidth={columnWidth}\n        monitorImagesLoaded={true}\n        gutterWidth={gutterWidth}\n        className={styles.container}\n        onLayout={this.onLayout}\n        appear={scaleUp.appear}\n        appearDelay={0}\n        appeared={scaleUp.appeared}\n        enter={scaleUp.enter}\n        entered={scaleUp.entered}\n        duration={300}\n      >\n        {items}\n      </StackGrid>\n    );\n  }\n}\n\nPhotoGrid.propTypes = {\n  photos: PHOTOS_SHAPE,\n  selectedTags: PropTypes.arrayOf(PropTypes.string),\n  selectedFilters: PropTypes.object,\n  size: PropTypes.shape({\n    width: PropTypes.number,\n    height: PropTypes.number\n  })\n};\n\nexport default PhotoGrid;\n","export const DESKTOP = \"desktop\";\nexport const MOBILE = \"mobile\";\n","export const getAllFilterOptions = state => state.filters;\n\nexport const getFilter = (state, id) => {\n  return state.filters.filter(filter => filter.id === id);\n};\n\nexport const getAllSelectedFilters = state => {\n  return state.filters.reduce((acc, filter) => {\n    if (filter && filter.options.length) {\n      const selectedOption = filter.options.filter(\n        option => option.isSelected === true\n      );\n\n      if (selectedOption.length) {\n        acc[filter.id] = selectedOption[0].id;\n      }\n    }\n    return acc;\n  }, {});\n};\n","export const getAllTags = state => state.tags;\n\nexport const getTag = (state, props) =>\n  state.tags.filter(tag => tag.id === props.id);\n\nexport const getAllSelectedTags = tags => {\n  return tags.reduce((acc, tag) => {\n    if (tag.isSelected) {\n      acc.push(tag.id);\n    }\n    return acc;\n  }, []);\n};\n\n// export const isTagSelected = createSelector(\n//   getTag,\n//   tag => tag && tag.isSelected\n// );\n\n// export const isTagEnabled = createSelector(getTag, tag => tag && tag.isEnabled);\n","const refinePhotosByTag = (photos, selectedTags) => {\n  return photos.reduce((acc, photo) => {\n    if (\n      !selectedTags.length ||\n      !selectedTags.find(tag => photo.tags.indexOf(tag) === -1)\n    ) {\n      acc.push(photo);\n    }\n    return acc;\n  }, []);\n};\n\nconst refinePhotosByFilter = (photos, selectedFilters) => {\n  const selectedFilterKeys = Object.keys(selectedFilters);\n  if (!selectedFilterKeys.length) {\n    return photos;\n  }\n\n  return photos.reduce((acc, photo) => {\n    // use .find() here for Union of filters, rather than intersection\n    const res = selectedFilterKeys\n      .filter(\n        filterKey =>\n          selectedFilters[filterKey] &&\n          photo.context &&\n          photo.context.custom[filterKey]\n      )\n      .every(\n        filterKey =>\n          selectedFilters[filterKey] === photo.context.custom[filterKey]\n      );\n\n    if (res) {\n      acc.push(photo);\n    }\n    return acc;\n  }, []);\n};\n\nconst refinePhotos = (photos, selectedFilters, selectedTags) =>\n  refinePhotosByFilter(\n    refinePhotosByTag(photos, selectedTags),\n    selectedFilters\n  );\n\nexport default refinePhotos;\n","import { connect } from \"react-redux\";\nimport PhotoGrid from \"./PhotoGrid\";\nimport { getAllPhotos, setOpenPhoto } from \"../../store/photos\";\nimport { getAllSelectedTags } from \"../../store/tags\";\nimport { getAllSelectedFilters } from \"../../store/filters\";\nimport refinePhotos from \"../../helpers/refinePhotos\";\n\nconst mapDispatchToProps = dispatch => ({\n  setOpenPhoto: (public_url, url) => {\n    return dispatch(setOpenPhoto(public_url, url));\n  }\n});\n\nconst mapStateToProps = state => ({\n  photos: refinePhotos(\n    getAllPhotos(state),\n    getAllSelectedFilters(state),\n    getAllSelectedTags(state.tags)\n  )\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PhotoGrid);\n","import axios from \"axios\";\nimport {\n  FETCH_PHOTOS_SUCCESS,\n  SET_OPEN_PHOTO,\n  CLOSE_OPEN_PHOTO\n} from \"./constants\";\n\nexport const fetchAllPhotos = url => dispatch => {\n  console.log(\"Fetch: \", url);\n  let photos = [];\n\n  const fetchPhotos = url =>\n    axios\n      .get(url)\n      .then(handleErrors)\n      .then(({ data }) => {\n        photos = photos.concat(data.resources);\n        if (data.next_cursor) {\n          const urlParams = new URLSearchParams(url);\n          urlParams.set(\"next_cursor\", data.next_cursor);\n          return fetchPhotos(decodeURIComponent(urlParams.toString()));\n        } else {\n          dispatch(fetchPhotosSuccess(photos));\n          return photos;\n        }\n      })\n      .catch(error => {\n        console.log(\"Failed to fetch photos\", error);\n      });\n\n  return fetchPhotos(url);\n};\n\nconst handleErrors = response => {\n  if (!responseOk(response.status)) {\n    throw Error(`${response.status}: ${response.statusText}`);\n  }\n  return response;\n};\n\nconst responseOk = n => (n >= 200 && n < 300 ? true : false);\n\nconst fetchPhotosSuccess = photos => ({\n  type: FETCH_PHOTOS_SUCCESS,\n  payload: { photos }\n});\n\nexport const setOpenPhoto = (public_id, url) => dispatch => {\n  dispatch({\n    type: SET_OPEN_PHOTO,\n    public_id,\n    url\n  });\n};\n\nexport const closeOpenPhoto = () => dispatch => {\n  dispatch({\n    type: CLOSE_OPEN_PHOTO\n  });\n};\n","export const FETCH_PHOTOS_SUCCESS = \"FETCH_PHOTOS_SUCCESS\";\nexport const SET_OPEN_PHOTO = \"SET_OPEN_PHOTO\";\nexport const CLOSE_OPEN_PHOTO = \"CLOSE_OPEN_PHOTO\";\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames/bind\";\nimport styles from \"./Accordion.module.css\";\n\nlet cx = classNames.bind(styles);\n\nclass Accordion extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      open: false\n    };\n  }\n\n  handleClick = () => {\n    const { open } = this.state;\n\n    this.setState({\n      open: !open\n    });\n  };\n\n  render() {\n    const { children, label } = this.props;\n    const { open } = this.state;\n\n    const icon = open ? \"‒\" : \"+\";\n\n    const classNames = cx({\n      [styles.accordion]: true,\n      open: open\n    });\n\n    return (\n      <div className={styles.wrapper}>\n        <button className={styles.label} onClick={this.handleClick}>\n          {label} <span className={styles.icon}>{icon}</span>\n        </button>\n        <div className={classNames}>{children}</div>\n      </div>\n    );\n  }\n}\n\nAccordion.propTypes = {\n  children: PropTypes.node.isRequired,\n  label: PropTypes.string.isRequired,\n  open: PropTypes.bool\n};\n\nexport default Accordion;\n","import { connect } from \"react-redux\";\nimport Accordion from \"./Accordion\";\n\nconst mapStateToProps = state => ({\n  ...state\n});\n\nconst mapDispatchToProps = () => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Accordion);\n","import PropTypes from \"prop-types\";\n\nexport const OPTIONS_SHAPE = PropTypes.arrayOf(\n  PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    isSelected: PropTypes.bool.isRequired\n  })\n);\n\nexport const FILTERS_SHAPE = PropTypes.arrayOf(\n  PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    options: OPTIONS_SHAPE\n  })\n);\n\nexport const SORT_BY_DATE_OPTIONS = [\"Date taken\", \"Date uploaded\"];\n\nexport const GRID_OPTIONS = [\"View all\", \"View by album\"];\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Accordion from \"../../Accordion\";\nimport classNames from \"classnames/bind\";\nimport styles from \"./ComboBox.module.css\";\nimport { OPTIONS_SHAPE } from \"../constants\";\n\nlet cx = classNames.bind(styles);\n\nclass ComboBox extends Component {\n  render() {\n    const { options, title, toggleSelectedFilter } = this.props;\n\n    const opts = options.map(({ id, isSelected }, i) => {\n      const className = cx({\n        [styles.option]: true,\n        [styles.selected]: isSelected ? true : false\n      });\n      return (\n        <li\n          key={i}\n          onClick={() => toggleSelectedFilter(title, id)}\n          className={className}\n        >\n          {id}\n        </li>\n      );\n    });\n\n    return (\n      <Accordion label={title}>\n        <ul className={styles.optionsList}>{opts}</ul>\n      </Accordion>\n    );\n  }\n}\n\nComboBox.propTypes = {\n  title: PropTypes.string.isRequired,\n  options: OPTIONS_SHAPE,\n  selected: PropTypes.string,\n  toggleSelectedFilter: PropTypes.func.isRequired\n};\n\nexport default ComboBox;\n","import { connect } from \"react-redux\";\nimport ComboBox from \"./ComboBox\";\nimport { toggleSelectedFilter } from \"../../../store/filters\";\n\nconst mapStateToProps = state => ({\n  ...state\n});\n\nconst mapDispatchToProps = (dispatch, { title, option }) => ({\n  toggleSelectedFilter: (title, option) =>\n    dispatch(toggleSelectedFilter(title, option))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ComboBox);\n","import { TOGGLE_SELECTED_FILTER } from \"./constants\";\n\nexport const toggleSelectedFilter = (title, option) => dispatch => {\n  dispatch({\n    type: TOGGLE_SELECTED_FILTER,\n    title,\n    option\n  });\n};\n","export const FILTER_IDS = [\"category\", \"medium\", \"subject\", \"location\"];\nexport const TOGGLE_SELECTED_FILTER = \"TOGGLE_SELECTED_FILTER\";\n","import React, { Component } from \"react\";\nimport ComboBox from \"./ComboBox\";\nimport styles from \"./Filters.module.css\";\nimport { FILTERS_SHAPE } from \"./constants\";\n\nclass Filters extends Component {\n  render() {\n    const { filterOptions } = this.props;\n    const filterComboBoxes = filterOptions.map(({ id, options }, i) => (\n      <ComboBox\n        key={i}\n        title={id}\n        options={options}\n        handleClick={this.handleClick}\n      />\n    ));\n\n    return <div className={styles.wrapper}>{filterComboBoxes}</div>;\n  }\n}\n\nFilters.propTypes = {\n  filterOptions: FILTERS_SHAPE\n};\n\nexport default Filters;\n","import { connect } from \"react-redux\";\nimport Filters from \"./Filters\";\nimport { getAllFilterOptions } from \"../../store/filters\";\n\nconst mapStateToProps = state => ({\n  filterOptions: getAllFilterOptions(state)\n});\n\nconst mapDispatchToProps = () => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Filters);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames/bind\";\nimport styles from \"./Tag.module.css\";\n\nlet cx = classNames.bind(styles);\n\nclass Tags extends Component {\n  handleClick = () => {\n    const { toggleTagSelected, id } = this.props;\n    toggleTagSelected(id);\n  };\n\n  render() {\n    const { id, isEnabled, isSelected } = this.props;\n\n    const className = cx({\n      [styles.button]: true,\n      isSelected: isSelected\n    });\n\n    return (\n      <button\n        className={className}\n        disabled={!isEnabled}\n        onClick={this.handleClick}\n      >\n        {id}\n      </button>\n    );\n  }\n}\n\nTags.propTypes = {\n  id: PropTypes.string.isRequired,\n  toggleTagSelected: PropTypes.func,\n  isSelected: PropTypes.bool.isRequired,\n  isEnabled: PropTypes.bool.isRequired\n};\n\nexport default Tags;\n","import { connect } from \"react-redux\";\nimport Tag from \"./Tag\";\nimport { toggleTagSelected } from \"../../../store/tags\";\n\nconst mapStateToProps = state => ({\n  ...state\n});\n\nconst mapDispatchToProps = (dispatch, { id }) => ({\n  toggleTagSelected: () => dispatch(toggleTagSelected(id))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Tag);\n","import { TOGGLE_TAG_SELECTED, TOGGLE_ENABLED_TAGS } from \"./constants\";\nimport { getAllPhotos } from \"../photos\";\n\nexport const toggleTagSelected = tagId => (dispatch, getState) => {\n  dispatch({\n    type: TOGGLE_TAG_SELECTED,\n    id: tagId\n  });\n  const photos = getAllPhotos(getState());\n  dispatch({ type: TOGGLE_ENABLED_TAGS, photos });\n};\n","export const TOGGLE_TAG_SELECTED = \"TOGGLE_TAG_SELECTED\";\nexport const TOGGLE_ENABLED_TAGS = \"TOGGLE_TAG_ENABLED\";\nexport const FETCH_TAGS = \"FETCH_TAGS\";\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Accordion from \"../Accordion\";\nimport Tag from \"./Tag\";\nimport styles from \"./Tags.module.css\";\nimport { TAGS_SHAPE } from \"./constants\";\n\nclass Tags extends Component {\n  render() {\n    const { tags, toggleTag } = this.props;\n    const mappedTags =\n      tags.length &&\n      tags.map(({ id, isEnabled, isSelected }, i) => {\n        return (\n          <Tag\n            key={i}\n            id={id}\n            toggleTag={toggleTag}\n            isEnabled={isEnabled}\n            isSelected={isSelected}\n          />\n        );\n      });\n\n    return (\n      <Accordion label={\"tags\"}>\n        <div className={styles.wrapper}>{mappedTags}</div>\n      </Accordion>\n    );\n  }\n}\n\nTags.propTypes = {\n  tags: TAGS_SHAPE,\n  toggleTag: PropTypes.func\n};\n\nexport default Tags;\n","import PropTypes from \"prop-types\";\n\nexport const TAGS_SHAPE = PropTypes.arrayOf(\n  PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    isEnabled: PropTypes.bool.isRequired,\n    isSelected: PropTypes.bool.isRequired\n  })\n);\n","import { connect } from \"react-redux\";\nimport Tags from \"./Tags\";\nimport { getAllTags } from \"../../store/tags\";\n\nconst mapStateToProps = state => ({\n  tags: getAllTags(state)\n});\n\nconst mapDispatchToProps = () => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Tags);\n","import React, { Component } from \"react\";\nimport styles from \"./Close.module.css\";\nimport classNames from \"classnames\";\n\nlet cx = classNames.bind(styles);\n\nclass Close extends Component {\n  render() {\n    const { open, handleClick } = this.props;\n    const classNames = cx({\n      [styles.close]: true,\n      [styles.open]: open\n    });\n\n    return (\n      <button className={classNames} onClick={handleClick}>\n        <span />\n        <span />\n      </button>\n    );\n  }\n}\n\nexport default Close;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Close from \"./Close\";\nimport styles from \"./PhotoModal.module.css\";\n\nclass PhotoModal extends Component {\n  componentDidMount() {\n    document.body.classList.add(\"no-scroll\");\n  }\n\n  componentWillUnmount() {\n    document.body.classList.remove(\"no-scroll\");\n  }\n\n  render() {\n    const { photo, closeOpenPhoto } = this.props;\n    const { url } = photo;\n\n    return (\n      <div className={styles.wrapper}>\n        <img className={styles.photo} src={url} />\n        <Close className={styles.close} handleClick={closeOpenPhoto} />\n      </div>\n    );\n  }\n}\n\nPhotoModal.propTypes = {\n  photo: PropTypes.object,\n  closeOpenPhoto: PropTypes.func.isRequired\n};\n\nexport default PhotoModal;\n","import { connect } from \"react-redux\";\nimport PhotoModal from \"./PhotoModal\";\nimport { closeOpenPhoto } from \"../../store/photos\";\n\nconst mapDispatchToProps = dispatch => ({\n  closeOpenPhoto: () => {\n    return dispatch(closeOpenPhoto());\n  }\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(PhotoModal);\n","import React, { Component } from \"react\";\nimport Nav from \"./components/Nav\";\nimport PhotoGrid from \"./components/PhotoGrid\";\nimport Filters from \"./components/Filters\";\nimport Tags from \"./components/Tags\";\nimport PhotoModal from \"./components/PhotoModal\";\nimport styles from \"./Photography.module.css\";\n\nclass Photography extends Component {\n  render() {\n    const { photo } = this.props;\n    console.log(photo);\n    return (\n      <>\n        <div className={styles.container}>\n          <PhotoGrid />\n          {photo && <PhotoModal photo={photo} />}\n        </div>\n        <Nav>\n          <Filters />\n          <Tags />\n        </Nav>\n      </>\n    );\n  }\n}\n\nexport default Photography;\n","import { connect } from \"react-redux\";\nimport { getOpenPhoto } from \"./store/photos\";\nimport Photography from \"./Photography\";\n\nconst mapStateToProps = state => ({\n  photo: getOpenPhoto(state)\n});\n\nexport default connect(mapStateToProps)(Photography);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"@babel/polyfill\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Loadable from \"react-loadable\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport AsyncPortfolio from \"./apps/portfolio\";\nimport AsyncPhotography from \"./apps/photography\";\nimport \"./global.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst AppBundle = (\n  <Router>\n    <Route exact path=\"/\" component={AsyncPortfolio} />\n    <Route path=\"/photography\" component={AsyncPhotography} />\n  </Router>\n);\n\nwindow.onload = () => {\n  Loadable.preloadReady().then(() => {\n    ReactDOM.hydrate(AppBundle, document.getElementById(\"root\"));\n  });\n};\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Accordion_wrapper__3L0_J\",\"accordion\":\"Accordion_accordion__2eu65\",\"label\":\"Accordion_label__1dOej\",\"open\":\"Accordion_open__1yVEJ\",\"icon\":\"Accordion_icon__1PuOI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mobile-up\":\"min-width: 480px\",\"flexContainer\":\"Nav_flexContainer__V_Tvq\",\"open\":\"Nav_open__1iskl\",\"refinements\":\"Nav_refinements__2gTi-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mobile-up\":\"min-width: 480px\",\"tablet-up\":\"min-width: 720px\",\"container\":\"PhotoGrid_container__3pm-g\",\"thumbnailWrapper\":\"PhotoGrid_thumbnailWrapper__WmVjD\",\"squareCrop\":\"PhotoGrid_squareCrop__1w8Z2\",\"squareBorder\":\"PhotoGrid_squareBorder__1uZfr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ComboBox_wrapper__D7Hgg\",\"optionsList\":\"ComboBox_optionsList__34ID8\",\"option\":\"ComboBox_option__1RIGF\",\"selected\":\"ComboBox_selected__379Ok\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger\":\"Burger_burger__-wWRl\",\"open\":\"Burger_open__reWJt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"close\":\"Close_close__12Dd1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PhotoModal_wrapper__clw_I\",\"photo\":\"PhotoModal_photo__3_ahD\",\"close\":\"PhotoModal_close__1gofg\"};"],"sourceRoot":""}